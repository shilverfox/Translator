apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

MobSDK {
    appKey "2913a192f8410"
    appSecret "cc53adec9e9ebd16ca113b68d63aaebe"
    ShareSDK {
        devInfo {
            Wechat {
                appId "wxed02cd1003a8a1e2"
                appSecret "565e7051822aa0bca52691701f997aaa"
            }
            WechatMoments {
                appId "wxed02cd1003a8a1e2"
                appSecret "565e7051822aa0bca52691701f997aaa"
            }
            QQ {
                appId "101533890"
                appKey "31f15a78e070d32eb887628567125625"
            }
            SinaWeibo {
                appKey "2044351401"
                appSecret "4ff84884cc0a29e3715ecb3d3da8d731"
                shareByAppClient true
            }
        }
    }
}


dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    api project.DEPENDENCY_SUPPORT_V7
    api project.DEPENDENCY_SUPPORT_DESIGN
    api project.DEPENDENCY_GOOGLE_GSON
    api project.DEPENDENCY_SUPPORT_GLIDE
    api project.DEPENDENCY_EVENT_BUS
    api project.DEPENDENCY_RX_JAVA
    api project.DEPENDENCY_SUPPORT_MULTIDEX
    api project.DEPENDENCY_RX_ANDROID
    api project.DEPENDENCY_SUPPORT_CONSTRAINT_LAYOUT
    api project.DEPENDENCY_WECHAT_SDK
    api project.DEPENDENCY_SUPPORT_RECYCLE

    // 首页tabLayout
//    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    api project.DEPENDENCY_TABLIB

    // 首页Banner
    api 'com.youth.banner:banner:1.4.10'

    // 多功能recyclerview
    api 'com.zhouyou:easyrecyclerview:1.0.5'

    // 动态权限
    api 'com.github.dfqin:grantor:2.5'

    // 视频
    api 'com.github.dueeeke.dkplayer:dkplayer-java:2.5.3'
    api 'com.github.dueeeke.dkplayer:dkplayer-armv7a:2.5.3'
    api 'com.github.dueeeke.dkplayer:dkplayer-ui:2.5.3'

    // 处理fragment 返回按键响应
    api 'com.github.ikidou:FragmentBackHandler:2.1'

    // Splash
    api 'gr.pantrif:easy-android-splash-screen:0.0.1'

    // 7牛云存储
    api 'com.qiniu:qiniu-android-sdk:7.3.11'

    // 头像选择
    api 'com.longsh:PhotoPicker:1.5.0'
    api 'com.yalantis:ucrop:2.2.0'

    api project(path: ':domain')

    debugImplementation  project.DEPENDENCY_LEAKCANARY
    releaseImplementation project.DEPENDENCY_LEAKCANARY
    testImplementation project.DEPENDENCY_LEAKCANARY_OP
    testImplementation project.DEPENDENCY_JUNIT
    androidTestCompile(project.DEPENDENCY_ESPRESSO, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    api project(path: ':data')
}

def javaVersion = JavaVersion.VERSION_1_7

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a','x86_64'
            universalApk true
        }
    }

    signingConfigs {
        release {
            keyAlias project.keyAlias
            keyPassword project.keyPassword
            storeFile file(project.storeFile);
            storePassword project.storePassword
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }

    //
    defaultConfig {
        applicationId "com.jbsx"
        minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK)
        targetSdkVersion Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSIONCODE)
        versionName project.VERSIONNAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    // 打Release包时不做lint校验
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}
